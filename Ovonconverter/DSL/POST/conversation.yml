assign_values:
  assign:
    request: ${incoming.body}
    event: ${incoming.body.ovon.events[0].eventType}

extractProtocolHeader:
  call: http.post
  args:
    url: "[#DMAPPER_URL]:[#DMAPPER_PORT]/convert/protocol-header"
    body:
      protocol: ${incoming.headers}
  result: convertedProtocol

assignProtocolVersion:
  assign:
    protocolVersion: ${convertedProtocol.response.body}

checkEvents:
  switch:
    - condition: ${event === 'invite'}
      next: returnGreeting
    - condition: ${event === 'whisper'}
      next: convertOvonToByk
    - condition: ${event === 'utterance'}
      next: convertOvonToByk
    - condition: ${event === 'bye'}
      next: returnGoodBye
  next: returnError

convertOvonToByk:
  call: http.post
  args:
    url: "[#DMAPPER_URL]:[#DMAPPER_PORT]/dmapper/ovonToByk-${protocolVersion}"
    body:
      request: ${request}
      type: "message"
      eventType: ${event}
      protocolVersion: ${protocolVersion}
  result: bykRequest

checkNextStep:
  switch:
    - condition: ${event === 'whisper'}
      next: returnNothing
    - condition: ${event === 'utterance'}
      next: assignSessionId

assignSessionId:
  assign:
    sessionId: ${bykRequest.response.body.data.message.chatId}

sendMessageToRasa:
  call: http.post
  args:
    url: "[#RASA_URL]:[#RASA_PORT]/conversations/${sessionId}/messages"
    body:
      text: ${bykRequest.response.body.data.message.content}
      sender: "user"
  result: rasaMessageResult

checkIntent:
  switch:
    - condition: ${rasaMessageResult.response.body.latest_message.intent_ranking[0].name.includes('nlu_fallback')}
      next: createErrorResponse
  next: getIntentMessage

createErrorResponse:
  call: http.post
  args:
    url: "[#DMAPPER_URL]:[#DMAPPER_PORT]/dmapper/bykMessageResponse"
    body:
      id: ${sessionId}
      lastMessage: "Ma ei saanud päris täpselt aru."
  result: convertedResponse
  next: convertBykToOvon

getIntentMessage:
  call: http.post
  args:
    url: "[#RASA_URL]:[#RASA_PORT]/conversations/${sessionId}/trigger_intent"
    body:
      name: ${rasaMessageResult.response.body.latest_message.intent_ranking[0].name}
  result: intentResponse

createResponse:
  call: http.post
  args:
    url: "[#DMAPPER_URL]:[#DMAPPER_PORT]/dmapper/bykMessageResponse"
    body:
      id: ${sessionId}
      lastMessage: ${intentResponse.response.body.messages[0].text}
  result: convertedResponse

convertBykToOvon:
  call: http.post
  args:
    url: "[#DMAPPER_URL]:[#DMAPPER_PORT]/dmapper/bykToOvon-${protocolVersion}"
    body:
      bykResponse: ${convertedResponse.response.body.data}
      eventType: ${event}
  result: ovonResult

returnSuccess:
  return: ${ovonResult.response.body}
  next: end

returnGoodBye:
  return: "Goodbye! It was a pleasure helping you. If you have any more questions in the future, feel free to ask. Have a fantastic day!"
  next: end

returnGreeting:
  return: "Hello! I hope you're having a wonderful day. It's great to see you here. How can I assist you today?"
  next: end

returnError:
  return: "Sorry couldn't find proper event type, please make sure request is correct."
  next: end

returnNothing:
  return: ""
  status: 200
  next: end